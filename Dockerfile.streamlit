# Dockerfile.streamlit

# Use a specific, slim version of Python for a smaller, more secure image
FROM python:3.10-slim-bullseye

# Set environment variables to prevent Python from writing pyc files and to buffer output
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set the working directory inside the container
WORKDIR /app

# Copy the requirements file and install dependencies first to leverage Docker's layer caching.
# This step is only re-run if requirements.txt changes.
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# --- NEW SECTION: Pre-download the model ---
# Copy the download script into the image
COPY download_model.py .
# Run the script to download and cache the model. This layer will be cached by Docker.
RUN python download_model.py
# -------------------------------------------

# Copy the rest of the application source code into the container
COPY . .

# Expose the port that Streamlit will run on
EXPOSE 8501

# The command to run the Streamlit application.
# The server address 0.0.0.0 is crucial for it to be accessible from outside the container.
# --server.enableCORS=false is a good practice when running behind a proxy.
CMD ["streamlit", "run", "app.py", "--server.address=0.0.0.0", "--server.port=8501", "--server.enableCORS=false"]